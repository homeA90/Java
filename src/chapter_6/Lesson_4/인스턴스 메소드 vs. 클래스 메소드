클래스 메소드란?
클래스 변수는 인스턴스가 아닌 클래스에 속한 변수였습니다.
마찬가지로, 클래스 메소드는 인스턴스가 아닌 클래스에 속한 메소드입니다.

클래스 메소드는 언제 사용할까요?

'인스턴스 메소드'는 인스턴스에 속한 것이기 때문에, 반드시 인스턴스를 생성해야 사용할 수 있습니다.
하지만 '클래스 메소드'는 클래스에 속한 것이기 때문에, 인스턴스를 생성하지 않고도 바로 실행할 수 있습니다.

인스턴스를 생성하지 않는 클래스, 어떤 것이 있을까요?
두 가지 예를 살펴봅시다.

Math 클래스
수학 관련 기능을 모아둔 Math 클래스를 import해서 봅시다.

import java.lang.Math;

public class Driver {
    public static void main(String[] args) {
        System.out.println(Math.abs(-10));   // 절댓값
        System.out.println(Math.max(3, 7));  // 두 값 중 최댓값
        System.out.println(Math.random());   // 0.0과 1.0 사이의 랜덤값
    }
}
10
7
0.40910432549890663
이렇게 Math.abs(), Math.max() 등을 사용하면, 자바에서 미리 만들어 둔 수학 관련 기능을 활용할 수 있습니다. 하지만 우리는 Math 클래스의 인스턴스를 생성하지는 않습니다. 필요하지 않기 때문이죠. 단지 Math 클래스의 기능(메소드)만 활용하면 됩니다.

이렇게 인스턴스의 생성 없이 메소드만 모아서 사용하고 싶을 때, 클래스 메소드를 사용할 수 있습니다.

Math 클래스에 있는 abs(), max(), random() 등의 메소드가 바로 '클래스 메소드'입니다.

main 메소드
사실 우리가 가장 먼저 접한 '클래스 메소드'는 바로 main 메소드입니다.

public static void main(String[] args) {
    ...
}
main은 자바 프로그램의 시작점이라고 했습니다. 첫 번째로 실행되는 코드이니, 어떤 인스턴스도 생성되어 있지 않겠죠?
main 메소드 역시 인스턴스를 생성하지 않고 실행하는 '클래스 메소드'입니다.

클래스 변수를 정의하기 위해서는 static이라는 키워드를 사용했었죠? 클래스 메소드도 동일하게 static이라는 키워드로 정의할 수 있습니다. main 앞에 static 키워드가 있는 걸 보니, 클래스 메소드가 확실하네요.

클래스 변수를 다룰 때
이 외에도, 앞서 살펴본 '클래스 변수'를 다룰 때 사용할 수 있습니다.

만약 인스턴스와 직접적인 관계가 없는 클래스 변수를 바꾸려면, 아래와 같이 클래스 메소드를 사용할 수도 있겠죠?

count라는 클래스 변수를 increment()라는 클래스 메소드로 바꿔봅시다.

public class Counter {
    static int count;

    public static void increment() {
        count++;
    }

    public static void main(String[] args) {
        System.out.println(Counter.count);

        Counter.increment();
        System.out.println(Counter.count);

        Counter.increment();
        System.out.println(Counter.count);

        Counter.increment();
        System.out.println(Counter.count);
    }
}
0
1
2
3
언제 클래스 메소드를 쓰면 되나요?
이제 인스턴스 메소드와 클래스 메소드의 차이가 이해 되시나요?

언제 클래스 메소드를 써야할지 판단하기 어렵다면, 이 질문을 해보세요.

"생성된 인스턴스가 하나도 없더라도 이 메소드를 호출하는 게 말이 되나요?"

정답이 'Yes'라면 클래스 메소드, 즉 static 메소드를 사용하면 됩니다!