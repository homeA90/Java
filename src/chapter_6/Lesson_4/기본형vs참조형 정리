

자바의 변수에는 두 가지 종류가 있는데요. 하나는 '기본형(Primitive Type)', 그리고 다른 하나는 '참조형(Reference Type)'입니다.
int, boolean, char, double 등은 모두 기본형이고, Person, String, int[] 등 클래스 기반 자료형은 모두 참조형입니다.

기본형 (Primitive Type)
기본형의 경우에는 변수가 값 자체를 보관한다고 생각하시면 됩니다.

int a = 3;
int b = a;

System.out.println(a);  // 3 출력
System.out.println(b);  // 3 출력

a = 4;
System.out.println(a);  // 4 출력
System.out.println(b);  // 3 출력

b = 7;
System.out.println(a);  // 4 출력
System.out.println(b);  // 7 출력
먼저 a에 3이 보관되고, b에는 a의 값인 3이 복사돼서 보관됩니다. 그 다음에 a = 4를 하면 a만 바뀌고 b는 그대로 3이겠죠?
마찬가지로 b = 7을 하면 b만 바뀌고 a는 그대로 4입니다.

기본형은 대부분 사람들이 예상한대로 동작할 것입니다.

참조형 (Reference Type)
참조형의 경우에는 변수가 값 자체를 보관하는 게 아니라, 변수가 값을 '가리킨다'고 생각하시면 됩니다.
실제 값은 메모리의 어딘가에 저장되어 있고, 변수는 그 영역을 가리키는 역할인 셈이죠.

객체
Person p1, p2;
p1 = new Person("김신의", 28);

p2 = p1;
p2.setName("문종모");

System.out.println(p1.getName());
System.out.println(p2.getName());
문종모
문종모
p1은 "김신의"라는 이름을 가진 Person 인스턴스가 저장되어 있는 영역을 가리킵니다. p2 = p1은 p2에게 같은 영역을 가리키라는 명령입니다.
그 후, p2.setName("문종모")를 하면 그 영역에 있는 인스턴스의 name은 "문종모"로 바뀝니다.
p1, p2 모두 같은 영역을 가리키고 있으니까 두 출력 값은 모두 "문종모"이겠죠?

배열
자바에서 배열도 객체이기 때문에 참조형입니다.

int[] a = new int[3];
int[] b = a;

a[0] = 1;
b[0] = 2;

System.out.println(a[0]);
System.out.println(b[0]);
2
2
마찬가지의 이유로 같은 값이 두 번 출력되겠죠?