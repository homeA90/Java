이번 시간에는 final 키워드에 대해서 배워보겠습니다. 변수를 정의할 때 final을 써주면, 그 변수는 '상수'가 됩니다. 즉, 한 번 정의하고 나서 다시 바꿀 수 없다는 것이죠.

사용 방법이 경우에 따라 미세하게 다르니, 각 상황을 예시를 통해 봅시다.

기본형
final double pi = 3.141592;
pi = 2.54;
이 코드는 오류가 나옵니다. final로 정의된 변수의 값을 바꿀 수 없기 때문이죠. π(pi)처럼 바꾸지 않는, 바꾸지 말아야 할 값이 있으면 final을 써주시면 됩니다.

참조형
public class Person {
    private String name;

    public Person(String name) {
        this.name = name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return this.name;
    }

    public static void main(String[] args) {
        final Person p1 = new Person("김신의");
        p1.setName("문종모");
        System.out.println(p1.getName());
    }
}
문종모
이 코드는 문제 없이 실행됩니다. p1을 final로 정의했는데 왜 그럴까요? final은 p1에 해당하는 것이지, p1의 인스턴스 변수에 해당하는 것이 아니기 때문입니다. 따라서 p1의 이름을 못 바꾸도록 만들고 싶으면 Person 클래스 내에서 name을 final로 정의해주면 됩니다.

public class Person {
    private final String name;

    public Person(String name) {
        this.name = name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return this.name;
    }

    public static void main(String[] args) {
        final Person p1 = new Person("김신의");
        p1.setName("문종모");
        System.out.println(p1.getName());
    }
}
java: cannot assign a value to final variable name
이제 오류가 나옵니다. final 변수는 한번만 설정해줄 수 있다고 했죠? 처음에 생성자에서 인스턴스 변수 name을 설정해줬는데, setName 메소드에서 바꿔주려고 하니까 문제가 생기는 것이죠.

예제
우리도 사실 객체에 해당하는 final 변수를 본적이 있습니다. 배열의 length 변수 기억하시나요?

int[] numberList = new int[7];
System.out.println(numberList.length);
7
length는 사실 final 변수입니다. 처음에 배열의 크기가 주어질 때 값이 정해지고, 그 후에는 바꿀 수 없다는 거죠.

int[] numberList = new int[7];
numberList.length = 10;
이렇게 새로운 값을 지정해주려고 하면 오류 메시지가 나옵니다:

cannot assign a value to final variable length
length가 final 변수이고, 따라서 값을 바꿀 수 없다는 뜻입니다.

*** 테스트 코드는 Lesson_2_Example_2_12 에서 확인 가능 ***